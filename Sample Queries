-- Add a new member
INSERT INTO Members (name, email, phone, address, membership_date)
VALUES ('John Doe', 'john@example.com', '1234567890', '123 Main St', CURDATE());

-- Add a new book
INSERT INTO Books (title, author, isbn, publisher, publication_year, category, total_copies, available_copies)
VALUES ('Database Systems', 'Alice Smith', '978-0123456789', 'Tech Pub', 2022, 'Computer Science', 5, 5);

-- Check out a book
START TRANSACTION;
INSERT INTO Loans (book_id, member_id, loan_date, due_date)
VALUES (1, 1, CURDATE(), DATE_ADD(CURDATE(), INTERVAL 14 DAY));
UPDATE Books SET available_copies = available_copies - 1 WHERE book_id = 1;
COMMIT;

-- Return a book
START TRANSACTION;
UPDATE Loans SET return_date = CURDATE(), status = 'Returned' WHERE loan_id = 1;
UPDATE Books SET available_copies = available_copies + 1 WHERE book_id = 1;
-- Check for overdue and apply fine if needed
COMMIT;

-- Search for available books
SELECT * FROM Books WHERE available_copies > 0 AND title LIKE '%database%';
